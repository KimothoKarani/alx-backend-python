name: CI (Django + MySQL)

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: gha_db
          MYSQL_USER: gha_user
          MYSQL_PASSWORD: gha_pass
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      DJANGO_SETTINGS_MODULE: messaging_app.settings
      SECRET_KEY: ci-secret-key
      DEBUG: "0"

      DB_ENGINE: mysql
      DB_NAME: gha_db
      DB_USER: gha_user
      DB_PASSWORD: gha_pass
      DB_HOST: 127.0.0.1
      DB_PORT: "3306"
      DATABASE_URL: mysql://gha_user:gha_pass@127.0.0.1:3306/gha_db

      PIP_DISABLE_PIP_VERSION_CHECK: "1"
      PIP_NO_COLOR: "1"

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system packages for mysqlclient build
        run: |
          sudo apt-get update
          sudo apt-get install -y default-libmysqlclient-dev build-essential pkg-config mysql-client

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt
          pip install pytest pytest-django pytest-cov flake8 # <-- ADDED flake8 HERE

      - name: Run Flake8 for linting # <-- NEW STEP ADDED HERE
        working-directory: messaging_app
        run: |
          # Run flake8. By default, it will fail the build if any errors are found.
          flake8 .

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -P 3306 -uroot -proot --silent && break
            echo "Waiting for MySQL ($i/30)..."
            sleep 2
          done

      - name: Show DBs (sanity)
        run: |
          mysql -h 127.0.0.1 -P 3306 -uroot -proot -e "SHOW DATABASES;"

      - name: Run migrations
        working-directory: messaging_app
        run: |
          python manage.py migrate --noinput

      - name: Run tests (pytest)
        working-directory: messaging_app
        run: |
          # pytest-cov generates coverage.xml
          pytest -q --junitxml=test-results.xml --cov=. --cov-report=xml:coverage.xml

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: messaging_app/test-results.xml

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: messaging_app/coverage.xml # This was already correctly configured